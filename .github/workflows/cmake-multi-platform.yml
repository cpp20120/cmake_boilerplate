name: CMake CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg
  VCPKG_TOOLCHAIN: ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive  # Important if vcpkg is a submodule

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            ninja-build \
            lcov \
            gcovr \
            clang \
            cmake \
            doxygen \
            graphviz \
            nsis \
            git

      - name: Setup vcpkg
        run: |
          git clone https://github.com/Microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh -disableMetrics
          echo "VCPKG_ROOT=$VCPKG_ROOT" >> $GITHUB_ENV
          echo "VCPKG_TOOLCHAIN=$VCPKG_TOOLCHAIN" >> $GITHUB_ENV

      - name: Configure (Release)
        run: |
          cmake --preset vcpkg-release \
            -DCMAKE_TOOLCHAIN_FILE=$VCPKG_TOOLCHAIN

      - name: Build
        run: cmake --build --preset build-vcpkg-release

      - name: Run tests
        run: ctest --preset test-vcpkg-release

      - name: Generate Coverage
        run: |
          lcov --capture --directory . --output-file coverage.info
          lcov --remove coverage.info '/usr/*' '*/vcpkg/*' --output-file coverage.info
          lcov --list coverage.info

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup MSVC and Ninja
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64  # or x86 if needed

      - name: Install NSIS
        run: choco install nsis -y

      - name: Setup vcpkg
        run: |
          git clone https://github.com/Microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat -disableMetrics
          echo "VCPKG_ROOT=${{ github.workspace }}\vcpkg" >> $env:GITHUB_ENV
          echo "VCPKG_TOOLCHAIN=${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake" >> $env:GITHUB_ENV

      - name: Configure (Release)
        run: |
          cmake --preset vcpkg-release `
            -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_TOOLCHAIN" `
            -DCMAKE_MAKE_PROGRAM=ninja `
            -G "Ninja"

      - name: Build
        run: cmake --build --preset build-vcpkg-release --config Release

      - name: Run tests
        run: ctest --preset test-vcpkg-release --config Release

      - name: Build Installer (NSIS)
        run: makensis setup.nsi

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          brew update
          brew install ninja cmake doxygen graphviz

      - name: Setup vcpkg
        run: |
          git clone https://github.com/Microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh -disableMetrics
          echo "VCPKG_ROOT=$VCPKG_ROOT" >> $GITHUB_ENV
          echo "VCPKG_TOOLCHAIN=$VCPKG_TOOLCHAIN" >> $GITHUB_ENV

      - name: Configure (Release)
        run: |
          cmake --preset vcpkg-release \
            -DCMAKE_TOOLCHAIN_FILE=$VCPKG_TOOLCHAIN

      - name: Build
        run: cmake --build --preset build-vcpkg-release

      - name: Run tests
        run: ctest --preset test-vcpkg-release
